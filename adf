[1mdiff --git a/.idea/dictionaries/sean.xml b/.idea/dictionaries/sean.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..6eed887[m
[1m--- /dev/null[m
[1m+++ b/.idea/dictionaries/sean.xml[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m<component name="ProjectDictionaryState">[m
[32m+[m[32m  <dictionary name="sean">[m
[32m+[m[32m    <words>[m
[32m+[m[32m      <w>livewire</w>[m
[32m+[m[32m    </words>[m
[32m+[m[32m  </dictionary>[m
[32m+[m[32m</component>[m
\ No newline at end of file[m
[1mdiff --git a/app/Http/Controllers/StataController.php b/app/Http/Controllers/StataController.php[m
[1mindex 306f2af..4c73e2d 100644[m
[1m--- a/app/Http/Controllers/StataController.php[m
[1m+++ b/app/Http/Controllers/StataController.php[m
[36m@@ -242,7 +242,7 @@[m [mclass StataController extends Controller[m
                 'kt_select2_3.required' => '- 가구 레벨 변수를 선택해야 합니다',[m
                 'kt_select2_4.required' => '- 가구원 레벨 변수를 선택해야 합니다',[m
                 'filename.required' => '- 저장할 파일명을 입력해야합니다',[m
[31m-                'filesave.required' => '- 저장할 파일타입을 선택해야합니다',[m
[32m+[m[32m                'filesave.required' => '- 저장할 파일타입을 선택해야합니다. ',[m
             ]);[m
         }[m
         else if($tab=='search') {[m
[36m@@ -266,7 +266,7 @@[m [mclass StataController extends Controller[m
 [m
 [m
 [m
[31m-        $isSuccess = false;[m
[32m+[m[32m        $isSuccess =  false;[m
         $nowDate = Carbon::now()->format('Ymd');[m
         $foldername = Str::random(16);[m
 [m
[36m@@ -305,7 +305,7 @@[m [mclass StataController extends Controller[m
         $this->parsingVariable($add_h, $add_p);[m
 [m
         $a_wave = request('a_wave');[m
[31m-        $add_a = request('add_a');[m
[32m+[m[32m        $add_a = request('add_a') ;[m
 [m
         //smart_klips_v3 h_resid_type p_age , wave(01 03 04 06) add_h(h0141) add_p(p0111) add_a1(a0101) add_a2(a1101) add_a3(a1725) a1_wave(03) a2_wave(04) a3_wave(06)[m
         $addTxt='';[m
[1mdiff --git a/config/livewire.php b/config/livewire.php[m
[1mnew file mode 100644[m
[1mindex 0000000..6b6da9f[m
[1m--- /dev/null[m
[1m+++ b/config/livewire.php[m
[36m@@ -0,0 +1,113 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn [[m
[32m+[m
[32m+[m[32m    /*[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    | Class Namespace[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    |[m
[32m+[m[32m    | This value sets the root namespace for Livewire component classes in[m
[32m+[m[32m    | your application. This value affects component auto-discovery and[m
[32m+[m[32m    | any Livewire file helper commands, like `artisan make:livewire`.[m
[32m+[m[32m    |[m
[32m+[m[32m    | After changing this item, run: `php artisan livewire:discover`.[m
[32m+[m[32m    |[m
[32m+[m[32m    */[m
[32m+[m
[32m+[m[32m    'class_namespace' => 'App\\Http\\Livewire',[m
[32m+[m
[32m+[m[32m    /*[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    | View Path[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    |[m
[32m+[m[32m    | This value sets the path for Livewire component views. This affects[m
[32m+[m[32m    | file manipulation helper commands like `artisan make:livewire`.[m
[32m+[m[32m    |[m
[32m+[m[32m    */[m
[32m+[m
[32m+[m[32m    'view_path' => resource_path('views/livewire'),[m
[32m+[m
[32m+[m[32m    /*[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    | Layout[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    | The default layout view that will be used when rendering a component via[m
[32m+[m[32m    | Route::get('/some-endpoint', SomeComponent::class);. In this case the[m
[32m+[m[32m    | the view returned by SomeComponent will be wrapped in "layouts.app"[m
[32m+[m[32m    |[m
[32m+[m[32m    */[m
[32m+[m
[32m+[m[32m    'layout' => 'layouts.livewire',[m
[32m+[m
[32m+[m[32m    /*[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    | Livewire Assets URL[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    |[m
[32m+[m[32m    | This value sets the path to Livewire JavaScript assets, for cases where[m
[32m+[m[32m    | your app's domain root is not the correct path. By default, Livewire[m
[32m+[m[32m    | will load its JavaScript assets from the app's "relative root".[m
[32m+[m[32m    |[m
[32m+[m[32m    | Examples: "/assets", "myurl.com/app".[m
[32m+[m[32m    |[m
[32m+[m[32m    */[m
[32m+[m
[32m+[m[32m    'asset_url' => null,[m
[32m+[m
[32m+[m[32m    /*[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    | Livewire Endpoint Middleware Group[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    |[m
[32m+[m[32m    | This value sets the middleware group that will be applied to the main[m
[32m+[m[32m    | Livewire "message" endpoint (the endpoint that gets hit everytime[m
[32m+[m[32m    | a Livewire component updates). It is set to "web" by default.[m
[32m+[m[32m    |[m
[32m+[m[32m    */[m
[32m+[m
[32m+[m[32m    'middleware_group' => 'web',[m
[32m+[m
[32m+[m[32m    /*[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    | Livewire Temporary File Uploads Endpoint Configuration[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    |[m
[32m+[m[32m    | Livewire handles file uploads by storing uploads in a temporary directory[m
[32m+[m[32m    | before the file is validated and stored permanently. All file uploads[m
[32m+[m[32m    | are directed to a global endpoint for temporary storage. The config[m
[32m+[m[32m    | items below are used for customizing the way the endpoint works.[m
[32m+[m[32m    |[m
[32m+[m[32m    */[m
[32m+[m
[32m+[m[32m    'temporary_file_upload' => [[m
[32m+[m[32m        'disk' => null,        // Example: 'local', 's3'              Default: 'default'[m
[32m+[m[32m        'rules' => null,       // Example: ['file', 'mimes:png,jpg']  Default: ['required', 'file', 'max:12288'] (12MB)[m
[32m+[m[32m        'directory' => null,   // Example: 'tmp'                      Default  'livewire-tmp'[m
[32m+[m[32m        'middleware' => null,  // Example: 'throttle:5,1'             Default: 'throttle:60,1'[m
[32m+[m[32m        'preview_mimes' => [   // Supported file types for temporary pre-signed file URLs.[m
[32m+[m[32m            'png', 'gif', 'bmp', 'svg', 'wav', 'mp4',[m
[32m+[m[32m            'mov', 'avi', 'wmv', 'mp3', 'm4a',[m
[32m+[m[32m            'jpg', 'jpeg', 'mpga', 'webp', 'wma',[m
[32m+[m[32m        ],[m
[32m+[m[32m        'max_upload_time' => 5, // Max duration (in minutes) before an upload gets invalidated.[m
[32m+[m[32m    ],[m
[32m+[m
[32m+[m[32m    /*[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    | Manifest File Path[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    |[m
[32m+[m[32m    | This value sets the path to the Livewire manifest file.[m
[32m+[m[32m    | The default should work for most cases (which is[m
[32m+[m[32m    | "<app_root>/bootstrap/cache/livewire-components.php)", but for specific[m
[32m+[m[32m    | cas